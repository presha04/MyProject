# -*- coding: utf-8 -*-
"""Maths_for_AI_II__Unit_4_Underlying_statistics_slide_32_to_39.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ReGQ6Hkn77UmXbXcQ5ifVy8aNWen3LPi
"""

# Library Import

import math,os
import random
import pandas as pd
import numpy as np
import seaborn as sns
import scipy.stats as stat
import matplotlib.pyplot as plt

from google.colab import drive

# Mount Google Drive
drive.mount('/content/drive')

# Now you can access your Google Drive files from /content/drive/My Drive

import pandas as pd

# Path to your CSV file in Google Drive
file_path = '/content/drive/MyDrive/SuperStoreOrders.csv'

# Load the CSV file into a DataFrame
df = pd.read_csv(file_path)

# Display the first few rows of the DataFrame
df.head()

#HEADERS OF ALL THE COLUMNS
df.columns

#DATA TYPES OF COLUMN
df.dtypes

#Which segment is the best seller?
df["segment"].value_counts()

sns.countplot(x=df['segment'])

#Which Region has the highest order count and In which Region do we need to grow our Business?
df["region"].value_counts()

sns.set(rc={'figure.figsize':(15,9)})
sns.countplot(x=df['region'])

#What are the Top 10 States with highest Order Count?
 df['state'].value_counts().head(10)

plt.figure(figsize=(20,15))
df['state'].value_counts().head(10).plot.pie()

iris_feat.columns

#Let's plot Scatter plot
# matplotlib

plt.scatter(x = iris_feat['sepal_length'],y = [iris_feat['petal_length']],alpha=1)

plt.title('Scatter Plot')
plt.xlabel('sepal_length')
plt.ylabel('petal_length')
#Show the plot
plt.show()

#Let's plot the Line Plot
# get columns to plot
columns = iris_feat.columns
# create x data
x_data = range(0, iris.shape[0])
# create figure and axis
fig, ax = plt.subplots()
# plot each column
for column in columns:
    ax.plot(x_data, iris[column], label=column)
# set title and legend
ax.set_title('Iris Dataset')
ax.legend()

#Let's Histogram plot
fig, ax = plt.subplots()
# plot histogram
ax.hist(iris_feat['sepal_length'])
# set title and labels
ax.set_title('sepal_length')
ax.set_xlabel('Points')
ax.set_ylabel('Frequency')

#Let's plot Bar Charts
df = iris.groupby('species')['sepal_length'].sum().to_frame().reset_index()

#Creating the bar chart
plt.bar(df['species'],df['sepal_length'],color = ['cornflowerblue','lightseagreen','steelblue'])

plt.title('Bar Chart')
plt.xlabel('Species')
plt.ylabel('sepal_length')

#Show the plot
plt.show()

#Let's draw the Heatmap

# Calculate the correlation matrix
correlation_matrix = iris_feat.corr()

# Plot the heatmap
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('Heatmap of Iris Dataset Correlation Matrix')
plt.show()



